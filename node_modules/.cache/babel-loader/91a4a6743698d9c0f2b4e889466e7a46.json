{"ast":null,"code":"import axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL } from \"../constants/userConstants\";\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../constants/userConstants\";\n\nconst login = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_LOGIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const _await$axios$post = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }),\n          data = _await$axios$post.data;\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const _await$axios$post2 = await axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    }),\n          data = _await$axios$post2.data;\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { login, register };","map":{"version":3,"sources":["/home/wallace/development/dhanraj/ems app/frontend/src/actions/userActions.js"],"names":["axios","Cookie","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","login","email","password","dispatch","type","payload","post","data","set","JSON","stringify","error","message","register","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,QAAwE,4BAAxE;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,kBAAvD,QAAiF,4BAAjF;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AACnDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV,kBAAR;AAA4BW,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAArC,GAAD,CAAR;;AACA,MAAI;AAAA,8BACe,MAAMV,KAAK,CAACc,IAAN,CAAW,kBAAX,EAA+B;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA/B,CADrB;AAAA,UACMK,IADN,qBACMA,IADN;;AAEFJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,kBAAR;AAA4BU,MAAAA,OAAO,EAAEE;AAArC,KAAD,CAAR;AACAd,IAAAA,MAAM,CAACe,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAvB;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,eAAR;AAAyBS,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAxC,KAAD,CAAR;AACD;AACF,CATH;;AAYE,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOb,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,qBAAR;AAA+BQ,IAAAA,OAAO,EAAE;AAAES,MAAAA,IAAF;AAAQb,MAAAA,KAAR;AAAeC,MAAAA;AAAf;AAAxC,GAAD,CAAR;;AACA,MAAI;AAAA,+BACe,MAAMV,KAAK,CAACc,IAAN,CAAW,qBAAX,EAAkC;AAAEQ,MAAAA,IAAF;AAAQb,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAlC,CADrB;AAAA,UACMK,IADN,sBACMA,IADN;;AAEFJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,qBAAR;AAA+BO,MAAAA,OAAO,EAAEE;AAAxC,KAAD,CAAR;AACAd,IAAAA,MAAM,CAACe,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAvB;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,kBAAR;AAA4BM,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA3C,KAAD,CAAR;AACD;AACF,CATD;;AAUF,SAAQZ,KAAR,EAAgBa,QAAhB","sourcesContent":["import axios from \"axios\";\r\nimport Cookie from 'js-cookie';\r\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL } from \"../constants/userConstants\";\r\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../constants/userConstants\";\r\n\r\nconst login = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_LOGIN_REQUEST, payload: { email, password } });\r\n    try {\r\n      const { data } = await axios.post(\"/api/users/login\", { email, password });\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n      Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({ type: USER_LOGIN_FAIL, payload: error.message });\r\n    }\r\n  }\r\n\r\n\r\n  const register = (name, email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\r\n    try {\r\n      const { data } = await axios.post(\"/api/users/register\", { name, email, password });\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\r\n    }\r\n  }\r\nexport {login , register};\r\n\r\n"]},"metadata":{},"sourceType":"module"}